

CREATE OR ALTER PROCEDURE silver.load_silver as

 DECLARE @start_time DATETIME, @end_time DATETIME, @batch_start_time DATETIME, @BATCH_END_TIME DATETIME;

  SET @batch_start_time = GETDATE();
  PRINT'------------------------------------------';
  PRINT'Loading crm table';
  print'-----------------------------------------';

  SET @start_time = GETDATE();
  PRINT 'TRUNCATING TABLE:silver.crm_cust_inf ';
TRUNCATE TABLE silver.crm_cust_info;

PRINT'INSERTING DATA INTO TABLE silver.crm_cust_inf'
INSERT INTO silver.crm_cust_info (
cst_id,
cst_key,
cst_firstname,
cst_lastname,
cst_marital_status,
cst_gndr,
cst_create_date
)

SELECT 
     cst_id,
	 cst_key,
	TRIM (cst_firstname) AS cst_firstname,
	 TRIM(cst_lastname) AS cst_lastname,
	            CASE WHEN UPPER(TRIM(cst_marital_status)) = 'M' THEN 'Maried'
				     WHEN UPPER(TRIM(cst_marital_status)) = 'S' THEN 'Sing;e'
					 ELSE 'N/A'
				END cst_marital_status,
	 	        CASE WHEN UPPER(TRIM(cst_gndr)) = 'M' THEN 'Male'
			     when UPPER(TRIM(cst_gndr)) = 'F' THEN 'Female'
				 ELSE 'N/A'
			END cst_gndr,
	 cst_create_date
FROM (
SELECT *,
ROW_NUMBER() OVER (PARTITION BY cst_id ORDER BY cst_create_date DESC) AS flag_last
FROM bronze.crm_cust_info
WHERE cst_id IS NOT NULL
)t WHERE flag_last = 1
 SET @END_TIME = GETDATE();
 PRINT '>> LOAD DURATION: ' + CAST(DATEDIFF(SECOND, @start_time, @end_time) AS NVARCHAR) + 'seconds';

 SET @start_time = GETDATE();
PRINT'-------------------------------------------------';
PRINT'TRUNCATING TABLE silver.crm_prd_info ';
PRINT'-------------------------------------------------';
TRUNCATE TABLE silver.crm_prd_info;

PRINT'LOADING DATA INTO TABLE silver.crm_prd_info';
INSERT INTO silver.crm_prd_info(
    prd_id,
	cat_id,
	prd_key,
	prd_num,
	prd_cost,
	prd_line,
	prd_start_dt,
	prd_end_dt
)

SELECT
     prd_id,
	
	 REPLACE(   SUBSTRING(prd_key, 1, 5), '-', '_') AS cat_id,
	 SUBSTRING(prd_key, 7, LEN(prd_key)) AS prd_key,
	 TRIM(prd_num) AS prd_num,
	 
	      CASE WHEN prd_cost IS NULL THEN '0'
		  ELSE prd_cost
		 END prd_cost,
	 
	    CASE WHEN UPPER(TRIM(prd_line))= 'R' THEN 'Road'
		     WHEN UPPER(TRIM(prd_line)) = 'S' THEN 'Other sales'
			 WHEN UPPER(TRIM(prd_line))= 'M' THEN 'Mountain'
			 WHEN UPPER(TRIM(prd_line)) ='T' THEN 'Touring'
			 ELSE 'N/A'
			END prd_line,
	 prd_start_dt,
	
	 LEAD(prd_start_dt) OVER (PARTITION BY prd_key ORDER BY prd_start_dt) AS prd_end_dt
FROM bronze.crm_prd_info
SET @end_time = getdate();
 PRINT '>> LOAD DURATION: ' + CAST(DATEDIFF(SECOND, @start_time, @end_time) AS NVARCHAR) + 'seconds';


SET @start_time = GETDATE();
PRINT'---------------------------------------------------------';
PRINT'TRUNCATING TABLE silver.crm_sales_details';
PRINT'---------------------------------------------------------';
TRUNCATE TABLE silver.crm_sales_details;

PRINT'LOADING DATA INTO TABLE: silver.crm_sales_details';
INSERT INTO  silver.crm_sales_details(
      sls_ord_num,
	  sls_prd_key ,
	  sls_cust_id,
	  sls_ord_dt,
	  sls_ship_dt,
	  sls_due_dt,
	  sls_sales,
	  sls_quantity,
	  sls_price
)

SELECT
   sls_ord_num,
   sls_prd_key,
   sls_cust_id,
   
     CASE WHEN sls_ord_dt = 0 OR LEN(sls_ord_dt) != 8 THEN NULL 
	  ELSE CAST(CAST(sls_ord_dt AS VARCHAR) AS DATE)
	  END sls_ord_dt,
 
  CASE WHEN sls_ship_dt <= 0 OR LEN(sls_ship_dt) != 8 THEN NULL
    ELSE CAST(CAST(sls_ship_dt AS NVARCHAR) AS DATE)
	END  sls_ship_dt,
 
      CASE WHEN sls_due_dt <= 0 OR LEN(sls_due_dt) != 8 THEN NULL
	  ELSE CAST(CAST(sls_due_dt AS VARCHAR) AS DATE)
	  END sls_due_dt,
   
     CASE WHEN sls_sales is NULL OR sls_sales <= 0 OR sls_sales != sls_quantity * ABS(sls_price)
	  THEN  sls_quantity * ABS(sls_price)
	  ELSE sls_sales
	  END sls_sales,
   sls_quantity,
   
     CASE WHEN sls_price is NULL OR sls_price <= 0 THEN sls_sales/ NULLif(sls_quantity,0)
	   ELSE sls_price
	 END sls_price
FROM  bronze.crm_sales_details
SET @end_time = GETDATE();
 PRINT '>> LOAD DURATION: ' + CAST(DATEDIFF(SECOND, @start_time, @end_time) AS NVARCHAR) + 'seconds';

SET @start_time = GETDATE()
PRINT'========================================================';
PRINT'LOADING ERP TABLES';
PRINT'========================================================';

PRINT'-------------------------------------------------------';
PRINT'TRUNCATING TABLE silver.erp_loc_a10 ' ;
PRINT'-------------------------------------------------------';
TRUNCATE TABLE silver.erp_loc_a101;

PRINT'LOADING DATA INTO TABLE: silver.erp_loc_a10 ';
INSERT INTO silver.erp_loc_a101(
CID,
CNTRY
)

SELECT
  REPLACE(CID, '-', '') AS CID,
    CASE WHEN TRIM(CNTRY) = 'DE' THEN 'German'
	     WHEN TRIM(CNTRY) IN (NULL, '') THEN 'N/A'
	     WHEN TRIM(CNTRY) IN ('USA', 'US') THEN 'United States'
		ELSE CNTRY
	END CNTRY
		 
FROM bronze.erp_loc_a101
SET @end_time = GETDATE();
 PRINT '>> LOAD DURATION: ' + CAST(DATEDIFF(SECOND, @start_time, @end_time) AS NVARCHAR) + 'seconds';

SET @start_time = GETDATE();
PRINT'-------------------------------------------------------';
PRINT'TRUNCATING TABLE silver.erp_px_cat_giv2 ' ;
PRINT'-------------------------------------------------------';
TRUNCATE TABLE silver.erp_px_cat_giv2;

PRINT'LOADING DATA INTO TABLE: silver.erp_px_cat_giv  ';
INSERT INTO silver.erp_px_cat_giv2(
 ID,
 CAT,
 SUBCAT,
 MAINTENANCE
)

SELECT 
  ID,
  CAT,
  SUBCAT,
  MAINTENANCE
FROM bronze.erp_px_cat_giv2
SET @end_time = getdate();
  PRINT '>> LOAD DURATION: ' + CAST(DATEDIFF(SECOND, @start_time, @end_time) AS NVARCHAR) + 'seconds';

 SET @batch_end_time = getdate();
  PRINT '>> LOAD BATCH DURATION: ' + CAST(DATEDIFF(SECOND, @start_time, @end_time) AS NVARCHAR) + 'seconds';
  

